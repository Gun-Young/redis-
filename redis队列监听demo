

1. 开启线程监听redis队列


import org.redisson.api.RBlockingQueue;
import org.redisson.api.RedissonClient;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.annotation.Order;
import org.springframework.stereotype.Component;

import javax.annotation.PostConstruct;

@Component
@Order(2)
public class RedissonListener {

    @Autowired
    private RedissonClient redissonClient;


    @PostConstruct
    public void  listen() throws  Exception{
         Thread thread = new Thread(new RealListener(redissonClient));
         thread.start();
    }

    class RealListener implements Runnable{

        private RedissonClient redissonClient;
        public RealListener(RedissonClient redissonClient){
            this.redissonClient = redissonClient;
        }
        @Override
        public void run() {
            try {
                while(true){
                    RBlockingQueue<Object> queue = redissonClient.getBlockingQueue("blockQueueTest");
                    Object messege = queue.take();
                    System.out.println("监听到队列消息："+messege);
                }
            }catch (Exception e){

            }
        }
    }
}




2.向队列中添加数据

   RBlockingQueue blockingQueue= redissonClient.getBlockingQueue("blockQueueTest");
   blockingQueue.addAsync("messege");



3.注解式redis连接
  import org.redisson.Redisson;
  import org.redisson.api.RedissonClient;
  import org.redisson.config.Config;
  import org.springframework.context.annotation.Bean;
  import org.springframework.context.annotation.Configuration;

  @Configuration
  public class RedissonConfig {

      @Bean
      public RedissonClient getRedisson(){
          Config config = new Config();
          config.useSingleServer().setAddress("redis://192.168.1.123:6379").setDatabase(12);
          return Redisson.create(config);
      }
  }





